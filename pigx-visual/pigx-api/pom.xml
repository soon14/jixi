<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!--继承pigx-visual -->
	<parent>
		<groupId>com.pig4cloud</groupId>
		<artifactId>pigx-visual</artifactId>
		<version>3.0.0</version>
	</parent>


	<!-- <groupId>com.pig4cloud</groupId> -->
	<artifactId>pigx-api</artifactId>
	<description>api Microservice</description>
	<packaging>jar</packaging>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!--必须：nacos注册中心客户端 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
		</dependency>
		<!--必须：nacos配置中心客户端 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
		</dependency>
		<!--必备：spring-boot web 模块 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--是否需要：undertow容器，灵活的高性能Web服务器，提供包括阻塞和基于NIO的非阻塞机制 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<!--是否需要：代码生成模板引擎 -->
		<dependency>
			<artifactId>velocity</artifactId>
			<groupId>org.apache.velocity</groupId>
			<version>${velocity.version}</version>
		</dependency>
		<!--websocket-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<!--必备：pigx数据操作 -->
		<dependency>
			<groupId>com.pig4cloud</groupId>
			<artifactId>pigx-common-data</artifactId>
		</dependency>
		<!--必备：pigx common核心 -->
		<dependency>
			<groupId>com.pig4cloud</groupId>
			<artifactId>pigx-common-core</artifactId>
		</dependency>
		<!--必备：pigx安全模块 -->
		<dependency>
			<groupId>com.pig4cloud</groupId>
			<artifactId>pigx-common-security</artifactId>
		</dependency>
		<!--必备：pigx日志 -->
		<dependency>
			<groupId>com.pig4cloud</groupId>
			<artifactId>pigx-common-log</artifactId>
		</dependency>
		<!--推荐：pigx swagger api调试接入 -->
		<dependency>
			<groupId>com.pig4cloud</groupId>
			<artifactId>pigx-common-swagger</artifactId>
		</dependency>
		<!--文件系统-->
		<dependency>
			<groupId>com.pig4cloud</groupId>
			<artifactId>pigx-common-minio</artifactId>
		</dependency>
		<!--支持动态路由配置 -->
		<dependency>
			<groupId>com.pig4cloud</groupId>
			<artifactId>pigx-common-gateway</artifactId>
		</dependency>
		<!--mybatis-->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
		</dependency>
		<!--数据库-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
		     <groupId>com.itextpdf</groupId>
		     <artifactId>itextpdf</artifactId>
		     <version>5.5.10</version>
        </dependency>
        <!-- 生成pdf报表  -->
         <dependency>
		     <groupId>com.itextpdf</groupId>
		     <artifactId>itext-asian</artifactId>
		     <version>5.2.0</version>
         </dependency>
          <dependency>
          <groupId>com.itextpdf.tool</groupId>
          <artifactId>xmlworker</artifactId>
          <version>5.5.10</version>
         </dependency>
         <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-freemarker</artifactId>
          </dependency>
          <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.19</version>
        </dependency>
        <!-- 生成缩略图 -->
        <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>javacv-platform</artifactId>
      <version>1.4.2</version>
      </dependency>
		<dependency>
			<groupId>com.dlin</groupId>
			<artifactId>ctc-smscloud-voice-jsonhttp-resources</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.dlin</groupId>
			<artifactId>ctc-smscloud-voice-jsonhttp</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!--默认：spring-boot热部署 -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!--推荐：帮助我们在Maven工程中，通过简单的配置，自动生成镜像并推送到仓库中。 -->
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>
