<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~      Copyright (c) 2018-2025, lengleng All rights reserved.
  ~
  ~  Redistribution and use in source and binary forms, with or without
  ~  modification, are permitted provided that the following conditions are met:
  ~
  ~ Redistributions of source code must retain the above copyright notice,
  ~  this list of conditions and the following disclaimer.
  ~  Redistributions in binary form must reproduce the above copyright
  ~  notice, this list of conditions and the following disclaimer in the
  ~  documentation and/or other materials provided with the distribution.
  ~  Neither the name of the pig4cloud.com developer nor the names of its
  ~  contributors may be used to endorse or promote products derived from
  ~  this software without specific prior written permission.
  ~  Author: lengleng (wangiegie@gmail.com)
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pig4cloud.pigx.admin.mapper.SysUserMapper">
	<!-- 通用查询映射结果 -->
	<resultMap id="baseResultMap" type="com.pig4cloud.pigx.admin.api.vo.UserVO">
		<id column="user_id" property="userId"/>
		<result column="username" property="username"/>
		<result column="nickname" property="nickname"/>
		<result column="password" property="password"/>
		<result column="salt" property="salt"/>
		<result column="phone" property="phone"/>
		<result column="avatar" property="avatar"/>
		<result column="wx_openid" property="wxOpenid"/>
		<result column="qq_openid" property="qqOpenid"/>
		<result column="ucreate_time" property="createTime"/>
		<result column="uupdate_time" property="updateTime"/>
		<result column="lock_flag" property="lockFlag"/>
		<result column="udel_flag" property="delFlag"/>
		<result column="deptId" property="deptId"/>
		<result column="tenantId" property="tenantId"/>
		<result column="dept_name" property="deptName"/>
		<result column="belong_sys" property="belongSys"/>
		<result column="unit_id" property="unitId"/>
		<result column="unit_name" property="unitName"/>
		<result column="type_name" property="type"/>
		<collection property="roleList" ofType="com.pig4cloud.pigx.admin.api.entity.SysRole"
					select="com.pig4cloud.pigx.admin.mapper.SysRoleMapper.listRolesByUserId" column="user_id">
		</collection>
	</resultMap>

	<!-- userVo结果集 -->
	<resultMap id="userVoResultMap" type="com.pig4cloud.pigx.admin.api.vo.UserVO">
		<id column="user_id" property="userId"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="salt" property="salt"/>
		<result column="phone" property="phone"/>
		<result column="avatar" property="avatar"/>
		<result column="wx_openid" property="wxOpenid"/>
		<result column="qq_openid" property="qqOpenid"/>
		<result column="ucreate_time" property="createTime"/>
		<result column="uupdate_time" property="updateTime"/>
		<result column="lock_flag" property="lockFlag"/>
		<result column="udel_flag" property="delFlag"/>
		<result column="deptId" property="deptId"/>
		<result column="tenantId" property="tenantId"/>
		<result column="dept_name" property="deptName"/>
		<result column="belong_sys" property="belongSys"/>
		<collection property="roleList" ofType="com.pig4cloud.pigx.admin.api.entity.SysRole">
			<id column="role_id" property="roleId"/>
			<result column="role_name" property="roleName"/>
	<result column="role_code" property="roleCode"/>
	<result column="role_desc" property="roleDesc"/>
	<result column="rcreate_time" property="createTime"/>
	<result column="rupdate_time" property="updateTime"/>
</collection>
		</resultMap>

	<sql id="userRoleSql">
		`user`.user_id,
		`user`.username,
		`user`.`password`,
		`user`.salt,
		`user`.phone,
		`user`.avatar,
		`user`.wx_openid,
		`user`.qq_openid,
		`user`.dept_id,
		`user`.create_time AS ucreate_time,
		`user`.update_time AS uupdate_time,
		`user`.del_flag AS udel_flag,
		`user`.lock_flag AS lock_flag,
		`user`.dept_id AS deptId,
		`user`.tenant_id AS tenantId,
		`user`.belong_sys AS belongSys,
		r.role_id,
		r.role_name,
		r.role_code,
		r.role_desc,
		r.create_time AS rcreate_time,
		r.update_time AS rupdate_time
	</sql>

	<sql id="userRoleDeptSql">
		`user`.user_id,
		`user`.username,
		`user`.`password`,
		`user`.salt,
		`user`.phone,
		`user`.avatar,
		`user`.wx_openid,
		`user`.qq_openid,
		`user`.create_time AS ucreate_time,
		`user`.update_time AS uupdate_time,
		`user`.del_flag AS udel_flag,
		`user`.lock_flag AS lock_flag,
		`user`.tenant_id AS tenantId,
		r.role_id,
		r.role_name,
		r.role_code,
		r.role_desc,
		r.create_time AS rcreate_time,
		r.update_time AS rupdate_time,
		d.name AS deptName,
		d.dept_id AS deptId
    </sql>

	<select id="getUserVoByUsername" resultMap="userVoResultMap">
		SELECT
			<include refid="userRoleSql"/>
		FROM
		sys_user AS `user`
		LEFT JOIN sys_user_role AS ur ON ur.user_id = `user`.user_id
		LEFT JOIN sys_role AS r ON r.role_id = ur.role_id
			WHERE `user`.username = #{username}
	</select>

	<select id="getUserVoById" resultMap="userVoResultMap">
        SELECT
	   		<include refid="userRoleDeptSql"/>
        FROM
            sys_user AS `user`
            LEFT JOIN sys_user_role AS ur ON ur.user_id = `user`.user_id
            LEFT JOIN sys_role AS r ON r.role_id = ur.role_id
            LEFT JOIN sys_dept AS d ON d.dept_id = `user`.dept_id
        WHERE
           `user`.user_id = #{id}
    </select>

	<select id="getUserVosPage" resultMap="baseResultMap">
		SELECT
		`user`.user_id,
		`user`.username,
		`user`.nickname,
		`user`.`password`,
		`user`.salt,
		`user`.phone,
		`user`.avatar,
		`user`.wx_openid,
		`user`.qq_openid,
		`user`.dept_id AS deptId,
		`user`.create_time AS ucreate_time,
		`user`.update_time AS uupdate_time,
		`user`.del_flag AS udel_flag,
		`user`.lock_flag AS lock_flag,
		`user`.tenant_id AS tenantId,
		`user`.belong_sys,
		`user`.unit_id,
		 bnu.name unit_name,
		 sdi.label type_name,
		 d.name AS dept_name
		FROM
		sys_user AS `user`
		LEFT JOIN sys_dept AS d ON d.dept_id = `user`.dept_id
		left join sys_dict_item sdi on sdi.type = 'sys_user_type' and sdi.value = `user`.type
		left join bs_networking_unit bnu on bnu.unit_id = `user`.unit_id
		<where>
			`user`.del_flag = 0
			<if test="query.username != null and query.username != ''">
				and `user`.username LIKE CONCAT('%',#{query.username},'%')
			</if>
			<if test="query.deptId != null and query.deptId != ''">
				and `user`.dept_id = #{query.deptId}
			</if>
			<if test="query.belongSys != null and query.belongSys != ''">
				and `user`.belong_sys = #{query.belongSys}
			</if>
			<if test="query.unitId != null and query.unitId !=''">
				and `user`.unit_id = #{query.unitId}
			</if>
			<if test="orgIds.size() > 0">
				and `user`.dept_id in
				<foreach collection="orgIds" item="orgId" index="index" open="(" close=")" separator=",">
					#{orgId}
				</foreach>
			</if>
		</where>
		ORDER BY `user`.create_time DESC
	</select>
	<select id="getUserByOrgId" resultMap="baseResultMap">
	   select username,nickname,phone,dept_id,dept_name 
	   from sys_user 
	   where dept_id=#{orgId}
	</select>
</mapper>
